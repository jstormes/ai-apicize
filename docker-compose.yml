############################################################################
# This section `secrets` is for sharing secret files between the host
# and Docker containers.  Unlike volumes, secrets can be outside the
# project's directory structure and have special rules to help prevent them
# from being included in a Docker image.
#
# A common development use case is ssh keys for private git repositories.
############################################################################
#secrets:
#  gemini-auth:
#    file: ~/.gemini
#  claude-auth:
#    file: ~/.claude/.credentials.json
#  claude-cfg:
#    file: ~/.claude.json
#  ssh:
#    file: ~/.ssh
#  aws:
#    file: ~/.aws


############################################################################
# This section `services` is where the "servers" are.  Each service provides
# a "server".  Common development use cases are web servers, database
# servers and testing servers.
#
# The purpose of each service is to define how the service (aka server)
# interacts with the host.
############################################################################
services:

  ##########################################################################
  # This section defines the PHP development server.
  ##########################################################################
  ai-dev:

    # This section tells Docker to build a new container using the
    # setup specified in the given dockerfile.
    build:
      context: .
      dockerfile: Dockerfile
      target: ai-dev

    # This section sets the environment variables inside the Docker container.
    environment:
      - TZ=America/Chicago # see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

      # Application environment
      - APP_ENV=development

      # Claude API key
#      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

    # The `ports` tells Docker to map port 80 from inside the container to
    # port 8088 outside the container aka port 8088 on the host, aka your laptop.
    # In this case, you can "open" this server by pointing a browser on the
    # host to http://localhost:8088.
    # {host port}:{container port}
#    ports:
#      - "8088:8088"

    # `volumes` tells Docker to map folders and files from the host to
    # inside the Docker container.
    # NOTE: The host folder/file MUST be inside the project directory.
    # {host folder}:{container folder}
    volumes:
#      - ./app:/app
      - ./:/project

    command: bash -c 'sleep infinity'

    extra_hosts:
      - "host.docker.internal:host-gateway"

    # The `secrets` allows folders and files specified in the `secrets` at the top of this
    # file to be mapped inside the container.  To use git and composer in the container,
    # you will need to map your ssh key.
#    secrets:
#      - source: gemini-auth
#        target: /home/user/.gemini.system
#
#      - source: claude-auth
#        target: /home/user/.claude.system/.credentials.json
#        uid: "1000"
#        gid: "1000"
#        mode: 0600
#      - source: claude-cfg
#        target: /home/user/.claude.json.system
#        uid: "1000"
#        gid: "1000"
#        mode: 0600
#
#      - source: ssh
#        target: /home/user/.ssh
#        uid: "1000"
#        gid: "1000"
#        mode: 0700
#
#      - source: aws
#        target: /home/user/.aws
#        uid: "1000"
#        gid: "1000"
#        mode: 0700
